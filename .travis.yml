#
# Configuration
#
language: cpp
dist: trusty

#
# Build Dependencies
#
before_script:

  #
  # Path
  #
  - export PATH="$HOME/bfprefix/bin:$PATH"

  #
  # Output Errors
  #
  - export CTEST_OUTPUT_ON_FAILURE=1

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi

  #
  # bfsdk
  #
  - git clone https://github.com/Bareflank/bfsdk.git
  - mkdir bfsdk/build
  - pushd bfsdk/build
  - |
    cmake \
      -DCMAKE_C_COMPILER="gcc-6" \
      -DCMAKE_CXX_COMPILER="g++-6" \
      ..
  - make install
  - popd
  - rm -Rf bfsdk

  #
  # bfvmm
  #
  - git clone https://github.com/Bareflank/bfvmm.git
  - mkdir bfvmm/build
  - pushd bfvmm/build
  - |
    cmake \
      -DCMAKE_C_COMPILER="gcc-6" \
      -DCMAKE_CXX_COMPILER="g++-6" \
      ..
  - make install
  - popd
  - rm -Rf bfvmm

#
# Build Matrix
#
matrix:
  include:

  #
  # Doxygen
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
          - doxygen
    env:
      - TEST="Doxygen"
    script:
      - cd ..
      - doxygen .doxygen.txt
      - |
        if [[ -s doxygen_warnings.txt ]]; then
          echo "You must fix doxygen before submitting a pull request"
          echo ""
          cat doxygen_warnings.txt
          exit -1
        fi

  #
  # Git Check
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # Astyle Format
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Astyle Format"
    script:
      - |
        cmake \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make install
      - make format
      - |
        if [[ -n $(git diff) ]]; then
          echo "You must run make format before submitting a pull request"
          echo ""
          git diff
          exit -1
        fi

  #
  # Clang Tidy
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - clang-tidy-4.0
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Clang Tidy"
    script:
      - |
        cmake \
          -DENABLE_TIDY=ON \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make install
      - make tidy

  #
  # Codecov
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Codecov"
    script:
      - |
        cmake \
          -DENABLE_COVERAGE=ON \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make
      - make test
      - cd ..
      - bash <(curl -s https://codecov.io/bash)

  #
  # Google Address Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Google Address Sanitizer"
    script:
      - |
        cmake \
          -DENABLE_DYNAMIC_ASAN=ON \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make
      - make test

  #
  # Google Undefined Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    env:
      - TEST="Google Undefined Sanitizer"
    script:
      - |
        cmake \
          -DENABLE_DYNAMIC_USAN=ON \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make
      - make test

  #
  # G++ 5
  #
  - os: linux
    env:
      - TEST="G++ 5"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-5
          - g++-5
          - gcc-6
          - g++-6
          - nasm
    script:
      - |
        cmake \
          -DENABLE_UNITTESTING=ON \
          -DCMAKE_C_COMPILER="gcc-5" \
          -DCMAKE_CXX_COMPILER="g++-5" \
          ..
      - make
      - make test

  #
  # G++ 6
  #
  - os: linux
    env:
      - TEST="G++ 6"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - nasm
    script:
      - |
        cmake \
          -DENABLE_UNITTESTING=ON \
          -DCMAKE_C_COMPILER="gcc-6" \
          -DCMAKE_CXX_COMPILER="g++-6" \
          ..
      - make
      - make test

  #
  # Clang 3.8
  #
  - os: linux
    env:
      - TEST="Clang 3.8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.8
        packages:
          - clang-3.8
          - gcc-6
          - g++-6
          - nasm
    script:
      - |
        cmake \
          -DENABLE_UNITTESTING=ON \
          -DCMAKE_C_COMPILER="clang-3.8" \
          -DCMAKE_CXX_COMPILER="clang++-3.8" \
          ..
      - make
      - make test

  #
  # Clang 3.9
  #
  - os: linux
    env:
      - TEST="Clang 3.9"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.9
        packages:
          - clang-3.9
          - gcc-6
          - g++-6
          - nasm
    script:
      - |
        cmake \
          -DENABLE_UNITTESTING=ON \
          -DCMAKE_C_COMPILER="clang-3.9" \
          -DCMAKE_CXX_COMPILER="clang++-3.9" \
          ..
      - make
      - make test

  #
  # Clang 4.0
  #
  - os: linux
    env:
      - TEST="Clang 4.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - gcc-6
          - g++-6
          - nasm
    script:
      - |
        cmake \
          -DENABLE_UNITTESTING=ON \
          -DCMAKE_C_COMPILER="clang-4.0" \
          -DCMAKE_CXX_COMPILER="clang++-4.0" \
          ..
      - make
      - make test
